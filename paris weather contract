pragma solidity ^0.4.0;
import "github.com/oraclize/ethereum-api/oraclizeAPI.sol";

contract ParisWeatherDescription is usingOraclize {
    
    mapping(bytes32=>bool) myidList;

    string description;
    
    // constructor called on contract deployment
    function ParisWeatherDescription() {
        /* get the weather description from openweather oracle using Paris city 
        id */
        oraclize_query("URL", "json(api.openweathermap.org/data/2.5/weather?id=2172797.weather.0.description)");
    }
    
    // callback for when query returns
    function __callback(bytes32 myid, string result) {

        
        if(msg.sender != oraclize_cbAddress()) throw;
        if(myidList[myid] == true) {
            //check if myid is new/not processed before
            throw;
        }

        myidList[myid] = true;

        // set the description 

        description = result;
    }
}